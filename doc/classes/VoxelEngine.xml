<?xml version="1.0" encoding="UTF-8" ?>
<class name="VoxelEngine" inherits="Object" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		Singleton holding common settings and handling voxel processing tasks in background threads.
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_stats" qualifiers="const">
			<return type="Dictionary" />
			<description>
				Gets debug information about shared voxel processing.
				The returned dictionary has the following structure:
				[codeblock]
				{
					"thread_pools": {
						"general": {
							"tasks": int,
							"active_threads": int,
							"thread_count": int,
							"task_names": PackedStringArray
						}
					},
					"tasks": {
						"streaming": int,
						"meshing": int,
						"generation": int,
						"main_thread": int,
						"gpu": int
					},
					"memory_pools": {
						"voxel_used": int,
						"voxel_total": int,
						"block_count": int,
						"std_allocated": int,
						"std_deallocated": int,
						"std_current": int
					}
				}
				[/codeblock]
			</description>
		</method>
		<method name="get_thread_count" qualifiers="const">
			<return type="int" />
			<description>
				Returns the number of threads currently used internally by the [code]ThreadedTaskRunner[/code].
			</description>
		</method>
		<method name="get_threaded_graphics_resource_building_enabled" qualifiers="const">
			<return type="bool" />
			<description>
				Tells if the voxel engine is able to create graphics resources from different threads. This will usually be true if the current renderer's thread model is safe or multi-threaded, but might also be false if the renderer would poorly benefit from this (such as legacy OpenGL).
			</description>
		</method>
		<method name="get_version_edition" qualifiers="const">
			<return type="String" />
			<description>
				Tells the edition of the voxel engine, which is either of the following: [code]module[/code], [code]extension[/code]
			</description>
		</method>
		<method name="get_version_git_hash" qualifiers="const">
			<return type="String" />
			<description>
				Gets the Git hash that was used to compile the voxel engine.
			</description>
		</method>
		<method name="get_version_major" qualifiers="const">
			<return type="int" />
			<description>
				Gets the major version number of the voxel engine. For example, in [code]1.2.0[/code], [code]1[/code] is the major version.
			</description>
		</method>
		<method name="get_version_minor" qualifiers="const">
			<return type="int" />
			<description>
				Gets the minor version number of the voxel engine. For example, in [code]1.2.0[/code], [code]2[/code] is the minor version.
			</description>
		</method>
		<method name="get_version_patch" qualifiers="const">
			<return type="int" />
			<description>
				Gets the patch version number of the voxel engine. For example, in [code]1.2.0[/code], [code]0[/code] is the patch version.
			</description>
		</method>
		<method name="get_version_status" qualifiers="const">
			<return type="String" />
			<description>
				Gets the version status, which may be one of the following: [code]dev[/code], [code]release[/code]
			</description>
		</method>
		<method name="get_version_v" qualifiers="const">
			<return type="Vector3i" />
			<description>
				Gets the major (x), minor (y) and patch (z) version numbers of the voxel engine as a single vector. May be useful for comparisons.
			</description>
		</method>
		<method name="run_tests">
			<return type="void" />
			<param index="0" name="options" type="Dictionary" />
			<description>
				Runs internal unit tests. This function is only available if the voxel engine is compiled with `voxel_tests=true`.
			</description>
		</method>
		<method name="set_thread_count">
			<return type="void" />
			<param index="0" name="count" type="int" />
			<description>
				Sets the number of threads to be used internally by the [code]ThreadedTaskRunner[/code]. Setting this can cause lagging, and it might take some time until the number of threads actually matches the given value.
			</description>
		</method>
	</methods>
</class>
