name: üêí Mono Windows Builds
on:
  push:
    branches: [ master, github_actions ]
  pull_request:
    branches: [ master ]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.x
  SCONS_CACHE_LIMIT: 4096
  MONO_TAG: mono-6.12.0.147
  MONO_BCL_RELEASE_TAG: release-c3a9d31
  MONO_INSTALL_DIR: C:\'Program Files'\Mono

jobs:     
  mono-glue:
    runs-on: "windows-latest"
    name: Generate Mono Glue

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: 3.x
          path: godot

      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: godot/modules/voxel

      # Move nuget.config from voxel repo to root of checkout, so msbuild can find it
      - name: Move nuget.config
        run: mv godot/modules/voxel/nuget.config godot/nuget.config

      # Download Mono Build
      # curl --location https://github.com/${{github.repository}}/raw/master/.github/files/mono-build-x64.zip -O
      - name: Download Mono Build
        run: |
          curl --location https://github.com/godotengine/godot-mono-builds/releases/download/${{ env.MONO_BCL_RELEASE_TAG}}/windows-x86_64.zip -O

      - name: Uncompress Mono-Build
        run: |
          Expand-Archive -Path windows-x86_64.zip

      - name: Download Mono BCL
        run: |
          curl --location https://github.com/godotengine/godot-mono-builds/releases/download/${{ env.MONO_BCL_RELEASE_TAG}}/bcl-desktop-win32.zip -O
          Expand-Archive -Path bcl-desktop-win32.zip -DestinationPath bcl-desktop-win32
          New-Item -Path desktop-windows-x86_64-release/lib/mono/4.5 -ItemType Directory
          Copy-Item -Path bcl-desktop-win32/desktop-win32-bcl/net_4_x-win32/* -Destination desktop-windows-x86_64-release/lib/mono/4.5/ -Recurse

      # Install all packages (except scons)
      - name: Configure dependencies
        run: choco install python make mingw

      # For copy_mono_root
      - name: Install Mono Runtime (for copy_mono_root)
        run: |
          curl --location https://download.mono-project.com/archive/6.12.0/windows-installer/${{ env.MONO_TAG }}-x64-0.msi -O
          Start-Process msiexec.exe -Wait -ArgumentList '/I D:\a\godot_voxel\godot_voxel\${{ env.MONO_TAG }}-x64-0.msi /quiet'
          
      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: mono-glue-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version
      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compile Godot (module_mono_enabled=yes mono_glue=no)
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          cd godot
          scons -j4 verbose=yes warnings=all werror=yes platform=windows tools=yes tests=no target=release_debug debug_symbols=no use_mingw=yes module_mono_enabled=yes mono_glue=no copy_mono_root=yes mono_static=yes mono_prefix=D:\a\godot_voxel\godot_voxel\desktop-windows-x86_64-release


      - uses: actions/upload-artifact@v2
        with:
          name: pre-mono-glue
          path: godot/bin/*

      - name: Generate Mono Glue
        run: |
          cd godot
          Get-ChildItem ./
          cd bin
          Get-ChildItem ./
          cd ../
          Try {
            .\bin\godot.windows.opt.tools.64.mono.exe --generate-mono-glue modules/mono/glue
          } 
          Catch {
            echo $_.Exception
            Break
          }

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE_MSVC_CONFIG: true
          SCONS_CACHE: /.scons_cache/
        run: |
          cd godot
          scons -j4 verbose=yes warnings=all werror=yes platform=windows tools=yes tests=no target=release_debug debug_symbols=no use_mingw=yes module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_static=yes mono_prefix=D:\a\godot_voxel\godot_voxel\desktop-windows-x86_64-release

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot.windows.opt.tools.64.mono
          path: godot/bin/*
