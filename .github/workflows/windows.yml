name: ðŸšª Windows Builds
on:
  push:
    branches: [ master, github_actions ]
  pull_request:
    branches: [ master ]

# Global Cache Settings
# SCONS_CACHE for windows must be set in the build environment
env:
  GODOT_BASE_BRANCH: "4.1"
  SCONS_CACHE_MSVC_CONFIG: true
  SCONS_CACHE_LIMIT: 4096

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  windows:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: ${{matrix.name}}

    strategy:
      matrix:
        include:
          - name: Editor build
            target: editor
            #cache_action: actions/cache@v3
            executable_name: godot.windows.editor.x86_64.exe

          - name: Release build
            target: template_release
            # I don't remember why this one used a different action in the past?
            # Either way, Github Actions does not support matrix variables in `uses` yet.
            # See https://github.com/orgs/community/discussions/9049
            #cache_action: RevoluPowered/cache@v2.1
            executable_name: godot.windows.template_release.x86_64.exe

    steps:
      # Clone Godot
      - uses: actions/checkout@v3
        with:
          repository: godotengine/godot
          ref: ${{ env.GODOT_BASE_BRANCH }}

      # Clone our module under the correct directory
      - uses: actions/checkout@v3
        with:
          path: modules/voxel

      # Upload cache on completion and check it out now
      # Editing this is pretty dangerous for Windows since it can break and needs to be properly tested with a fresh cache.
      - name: Load .scons_cache directory
        id: windows-cache
        #uses: ${{matrix.cache_action}}
        uses: actions/cache@v3
        with:
          path: /.scons_cache/
          key: ${{github.job}}-${{matrix.target}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{matrix.target}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{matrix.target}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{matrix.target}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons pywin32
          python --version
          scons --version

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      # TODO Enhancement: we'd like to use `warnings=extra` with MSVC but Godot doesn't compile yet with that level of warnings.
      # See https://github.com/godotengine/godot/issues/66537
      - name: Compilation
        env:
          SCONS_CACHE: /.scons_cache/
        run: |
          scons -j2 verbose=yes warnings=all werror=yes platform=windows tests=no target=${{matrix.target}} dev_build=no

      # Make build available
      - uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.executable_name}}
          path: bin/${{matrix.executable_name}}

